<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>2013s on nabito.net</title>
    <link>https://ozzyczech.github.io/nabito.net/2013/</link>
    <description>Recent content in 2013s on nabito.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cs-cz</language>
    <managingEditor>ozana@omdesign.cz (Roman Ožana)</managingEditor>
    <webMaster>ozana@omdesign.cz (Roman Ožana)</webMaster>
    <lastBuildDate>Mon, 30 Dec 2013 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ozzyczech.github.io/nabito.net/2013/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Upgrade all npm packages to latest versions</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/upgrade-all-npm-packages-to-latest-versions/</link>
      <pubDate>Mon, 30 Dec 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/upgrade-all-npm-packages-to-latest-versions/</guid>
      <description>

&lt;h1 id=&#34;upgrade-all-npm-packages-to-latest-versions&#34;&gt;Upgrade all npm packages to latest versions&lt;/h1&gt;

&lt;p&gt;Install follow package &lt;a href=&#34;https://npmjs.org/package/npm-check-updates&#34;&gt;npm-check-updates&lt;/a&gt; by&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install -g npm-check-updates
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;and run &lt;code&gt;ncu -a&lt;/code&gt; for upgrade &lt;code&gt;package.json&lt;/code&gt; versions.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to clean flash drive before unmount on Mac</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/how-to-clean-flash-drive-before-unmount-on-mac/</link>
      <pubDate>Sat, 21 Dec 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/how-to-clean-flash-drive-before-unmount-on-mac/</guid>
      <description>

&lt;h1 id=&#34;how-to-clean-flash-drive-before-unmount-on-mac&#34;&gt;How to clean flash drive before unmount on Mac&lt;/h1&gt;

&lt;p&gt;How to &lt;strong&gt;clean flash drive&lt;/strong&gt; and delete all hidden (dot) files on mac before unmount? It&amp;rsquo;s simple, save follow commands as &lt;code&gt;flash&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

if [ -n &amp;quot;$1&amp;quot; ]; then
  read -r -p &amp;quot;Clean /Volumes/$1/ and unmount? [y/N] &amp;quot; response
  if [[ $response =~ ^([yY][eE][sS]|[yY])$ ]]; then      
    find /Volumes/$1/ -name &#39;._*&#39; -type f -delete
    rm -rf /Volumes/$1/.Spotlight-V100/
    rm -rf /Volumes/$1/.Trashes/
    diskutil unmount /Volumes/$1/
    echo &amp;quot;Done...&amp;quot;
  fi
else
  echo &amp;quot;Flash drive name missing&amp;quot;
fi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then change the access mode of a file &lt;code&gt;chmod +x flash&lt;/code&gt;. To unmount a clean flash drive just run
&lt;code&gt;./flash Flashka&lt;/code&gt; (Flashka is name od drive).&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Run FTP server on Mac OS X</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/run-ftp-server-on-mac-os-x/</link>
      <pubDate>Thu, 28 Nov 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/run-ftp-server-on-mac-os-x/</guid>
      <description>

&lt;h1 id=&#34;run-ftp-server-on-mac-os-x&#34;&gt;Run FTP server on Mac OS X&lt;/h1&gt;

&lt;p&gt;Setup everyhing: &lt;code&gt;sudo subl /etc/ftpd.conf&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# match umask from Mac OS X Server ftpd
umask all 022
chroot GUEST /Users/roman/ftp
modify guest off
umask  guest 0707
upload guest on
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Start FTP server&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo launchctl load /System/Library/LaunchDaemons/ftp.plist
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And stop again:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;sudo launchctl unload /System/Library/LaunchDaemons/ftp.plist&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Composer require PEAR package</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/composer-require-pear-package/</link>
      <pubDate>Wed, 25 Sep 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/composer-require-pear-package/</guid>
      <description>

&lt;h1 id=&#34;composer-require-pear-package&#34;&gt;Composer require PEAR package&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;{
 &amp;quot;repositories&amp;quot;: [
  {
   &amp;quot;type&amp;quot;: &amp;quot;pear&amp;quot;,
   &amp;quot;url&amp;quot;: &amp;quot;http://pear.php.net&amp;quot;
  }
 ],
 &amp;quot;require&amp;quot;: {
  &amp;quot;pear-pear/Mail&amp;quot;: &amp;quot;&amp;gt;=1.2.0&amp;quot;
 }
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to safely commit vendor dir with php Composer</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/how-to-safely-commit-vendor-dir-with-php-composer/</link>
      <pubDate>Wed, 24 Jul 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/how-to-safely-commit-vendor-dir-with-php-composer/</guid>
      <description>

&lt;h1 id=&#34;how-to-safely-commit-vendor-dir-with-php-composer&#34;&gt;How to safely commit vendor dir with php Composer&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://getcomposer.org/&#34;&gt;Composer&lt;/a&gt; is great tool, but sometimes you will need avoid all external dependencies. Sometimes you will need have all source codes in your git repository. Should I &lt;a href=&#34;http://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md&#34;&gt; commit the dependencies&lt;/a&gt; in my vendor directory, and still have all benefits of using Composer? Here are my requirements: - Everything need to be automatically.
- I will work on application and my packages together.
- I need a simple way how to commit and publish new version of packages.
- Workflow need to be simple (mimimum of commands)&lt;/p&gt;

&lt;h3 id=&#34;how-to-commit-vendor-dir&#34;&gt;How to commit vendor dir?&lt;/h3&gt;

&lt;p&gt;Remove &lt;code&gt;vendor&lt;/code&gt; dir from your &lt;code&gt;.gitignore&lt;/code&gt; and add follow lines to root of &lt;code&gt;composer.json&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;scripts&amp;quot;: {
 &amp;quot;post-update-cmd&amp;quot;: [&amp;quot;echo [WARNING] Delete all .git dirs&amp;quot;, &amp;quot;rm -rf vendor/**/**/.git&amp;quot;],
 &amp;quot;post-install-cmd&amp;quot;: [&amp;quot;echo [WARNING] Delete all .git dirs&amp;quot;, &amp;quot;rm -rf vendor/**/**/.git&amp;quot;]
},
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;That&amp;rsquo;s automatically remove the &lt;code&gt;.git&lt;/code&gt; directory of every dependency after the installation or update. You can safely commit everything to your git repo and avoid mistakes with fake git &amp;ldquo;submodules&amp;rdquo;. Run: &lt;code&gt;composer update&lt;/code&gt; and commit everything to your repo. ### How make changes in packages?&lt;/p&gt;

&lt;p&gt;When you are using tagged releases (no dev versions) of package then run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf vendor/some/package &amp;amp;&amp;amp; composer update some/package --prefer-source --no-scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For dev versions (dev-master) it&amp;rsquo;s simpler:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;rm -rf vendor/some/package &amp;amp;&amp;amp; composer update some/package --no-scripts
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, when you go to vendor/some/package dir it&amp;rsquo;s common git repository - you can make changes, commit and publish new versions of package. But don&amp;rsquo;t forgot run &lt;code&gt;composer update&lt;/code&gt; before commit main repo, becouse there is still .git dir in package! ### Disadvantages&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Large VCS repository size and diffs when you update code.&lt;/li&gt;
&lt;li&gt;Duplication of the history of all your dependencies in your own VCS.&lt;/li&gt;
&lt;li&gt;There can be conflicts in commits especially when you work in larger team.&lt;/li&gt;
&lt;li&gt;Still &lt;strong&gt;not avoid commit .git directory&lt;/strong&gt; after running composer with &lt;code&gt;--no-scripts&lt;/code&gt; param.&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Setup email sending from PHP on Mac</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/setup-email-sending-from-php-on-mac/</link>
      <pubDate>Tue, 14 May 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/setup-email-sending-from-php-on-mac/</guid>
      <description>

&lt;h1 id=&#34;setup-email-sending-from-php-on-mac&#34;&gt;Setup email sending from PHP on Mac&lt;/h1&gt;

&lt;p&gt;First write in terminal: &lt;code&gt;which sendmail&lt;/code&gt; wlll return path to sendmail app (in my case &lt;code&gt;/usr/sbin/sendmail&lt;/code&gt;). Then open &lt;code&gt;php.ini&lt;/code&gt; file and setup:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sendmail_path = /usr/sbin/sendmail -t -i
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Create necessary folder and setup postfix permissions:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo mkdir -p /Library/Server/Mail/Data/spool
sudo /usr/sbin/postfix set-permissions
sudo /usr/sbin/postfix start
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And check if emails will come:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;php -r &amp;quot;mail(&#39;youremail@domain.com&#39;, &#39;subject&#39;, &#39;message&#39;, &#39;From: &amp;lt;youremail@domain.com&amp;gt;&#39; . PHP_EOL);&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to detect Retina display in CSS?</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/how-to-detect-retina-display-in-css/</link>
      <pubDate>Wed, 27 Mar 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/how-to-detect-retina-display-in-css/</guid>
      <description>

&lt;h1 id=&#34;how-to-detect-retina-display-in-css&#34;&gt;How to detect Retina display in CSS?&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;@media only screen and (-webkit-min-device-pixel-ratio: 2),(min-resolution: 192dpi) {
  /* it&#39;s retina yeah! */
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Toggle Hidden Files in Finder</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/toggle-hidden-files-in-finder/</link>
      <pubDate>Tue, 26 Mar 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/toggle-hidden-files-in-finder/</guid>
      <description>

&lt;h1 id=&#34;toggle-hidden-files-in-finder&#34;&gt;Toggle Hidden Files in Finder&lt;/h1&gt;

&lt;p&gt;Run &lt;a href=&#34;http://en.wikipedia.org/wiki/Automator_(software)&#34;&gt;Automator&lt;/a&gt; and create new Application. Add task &lt;strong&gt;Run Shell script&lt;/strong&gt; and paste follow code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;STATUS=`defaults read com.apple.finder AppleShowAllFiles`
if [ $STATUS == YES ];
then
    defaults write com.apple.finder AppleShowAllFiles NO
else
    defaults write com.apple.finder AppleShowAllFiles YES
fi
killall Finder
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save application. From now can Tooggle&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>List all mounted drives on mac</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/list-all-mounted-drives-on-mac/</link>
      <pubDate>Mon, 11 Mar 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/list-all-mounted-drives-on-mac/</guid>
      <description>

&lt;h1 id=&#34;list-all-mounted-drives-on-mac&#34;&gt;List all mounted drives on mac&lt;/h1&gt;

&lt;p&gt;It&amp;rsquo;s simple: &lt;code&gt;df -h&lt;/code&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Make WordPress globals more accessible</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/make-wordpress-globals-more-accessible/</link>
      <pubDate>Fri, 08 Feb 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/make-wordpress-globals-more-accessible/</guid>
      <description>

&lt;h1 id=&#34;make-wordpress-globals-more-accessible&#34;&gt;Make WordPress globals more accessible&lt;/h1&gt;

&lt;p&gt;Wordpress using a lot &lt;a href=&#34;http://codex.wordpress.org/Global_Variables&#34;&gt;globals variables&lt;/a&gt;. These variables are used throughout WordPress code for various reasons. Great example is database connection object &lt;a href=&#34;http://codex.wordpress.org/Class_Reference/wpdb&#34;&gt;wpdb&lt;/a&gt;. Here is common example how to use &lt;strong&gt;wpdb&lt;/strong&gt; in some function:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function something() {
  global $wpdb;
  /** @var wpdb $wpdb */
  $wpdb-&amp;gt;query(&#39;SQL...&#39;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s highly uncomfortable and long! Therefore, I have prepared a simple object which make all global variables much more accesible from anywhere: &lt;a href=&#34;https://gist.github.com/OzzyCzech/4737518&#34;&gt;https://gist.github.com/OzzyCzech/4737518&lt;/a&gt; (PHP 5.3+ only)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function something() {
  Globals::wpdb()-&amp;gt;query(&#39;SQL...&#39;);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Run iPhone simulator without XCode</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/run-iphone-simulator-without-xcode/</link>
      <pubDate>Thu, 31 Jan 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/run-iphone-simulator-without-xcode/</guid>
      <description>

&lt;h1 id=&#34;run-iphone-simulator-without-xcode&#34;&gt;Run iPhone simulator without XCode&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;open -a &amp;quot;iPhone Simulator&amp;quot;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Seznam věcí které Internet zabil</title>
      <link>https://ozzyczech.github.io/nabito.net/2013/seznam-veci-ktere-internet-zabil/</link>
      <pubDate>Tue, 08 Jan 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2013/seznam-veci-ktere-internet-zabil/</guid>
      <description>

&lt;h1 id=&#34;seznam-věcí-které-internet-zabil&#34;&gt;Seznam věcí které Internet zabil&lt;/h1&gt;

&lt;p&gt;Co všechno Internet zabil nebo zabíjí?&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Hudební průmysl&lt;/li&gt;
&lt;li&gt;Filmový průmysl&lt;/li&gt;
&lt;li&gt;Porno průmysl&lt;/li&gt;
&lt;li&gt;Zásilkové služby (Quelle, Neckermann atd.)&lt;/li&gt;
&lt;li&gt;Pohledy a dopisy psané rukou&lt;/li&gt;
&lt;li&gt;Anonymitu (ta postupně mizí)&lt;/li&gt;
&lt;li&gt;DVD a videopůjčovny&lt;/li&gt;
&lt;li&gt;Časopisy noviny a poctivou novinařinu&lt;/li&gt;
&lt;li&gt;Televizi&lt;/li&gt;
&lt;li&gt;Encyklopedie&lt;/li&gt;
&lt;li&gt;MMS, SMS&lt;/li&gt;
&lt;li&gt;Tištěné mapy&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>