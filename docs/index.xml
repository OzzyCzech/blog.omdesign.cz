<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>nabito.net</title>
    <link>https://ozzyczech.github.io/nabito.net/</link>
    <description>Recent content on nabito.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cs-cz</language>
    <managingEditor>ozana@omdesign.cz (Roman Ožana)</managingEditor>
    <webMaster>ozana@omdesign.cz (Roman Ožana)</webMaster>
    <lastBuildDate>Mon, 08 Aug 2016 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ozzyczech.github.io/nabito.net/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to Auto indent code in Atom editor</title>
      <link>https://ozzyczech.github.io/nabito.net/2016/auto-indent-code-in-atom-editor/</link>
      <pubDate>Mon, 08 Aug 2016 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2016/auto-indent-code-in-atom-editor/</guid>
      <description>

&lt;h1 id=&#34;how-to-auto-indent-code-in-atom-editor&#34;&gt;How to Auto indent code in Atom editor&lt;/h1&gt;

&lt;p&gt;Auto indent it&amp;rsquo;s hidden function is hidden in menu &lt;code&gt;Ediror &amp;gt; Lines &amp;gt; Auto Indent&lt;/code&gt; but shortcut missing :-(&lt;/p&gt;

&lt;p&gt;Press &lt;code&gt;cmd + shift + p&lt;/code&gt; then type &lt;code&gt;keymap&lt;/code&gt; and hit enter &lt;strong&gt;Open Your Keymap&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;./atom-keymap.png&#34; alt=&#34;Open Your Keymap&#34; /&gt;&lt;/p&gt;

&lt;p&gt;and add follow code there&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&#39;atom-text-editor&#39;:
  &#39;cmd-alt-l&#39;: &#39;editor:auto-indent&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now your Atom edit can Auto Indent with &lt;code&gt;cmd + alt + l&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;tags: atom, editor, keymap, tips&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Twitter Bootstrap Feedback Button</title>
      <link>https://ozzyczech.github.io/nabito.net/2015/twitter-bootstrap-feedback-button/</link>
      <pubDate>Tue, 03 Feb 2015 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2015/twitter-bootstrap-feedback-button/</guid>
      <description>

&lt;h1 id=&#34;twitter-bootstrap-feedback-button&#34;&gt;Twitter Bootstrap Feedback Button&lt;/h1&gt;

&lt;p&gt;Follow code add orange &lt;strong&gt;Feedback button&lt;/strong&gt; similar to the UserEcho button allow users send you feedback from any page. It&amp;rsquo;s based on Twitter Boostrap modal window.&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Transparent SVG Feedback text&lt;/li&gt;
&lt;li&gt;Pure CSS animation and positioning&lt;/li&gt;
&lt;li&gt;jQuery for Ajax form submit&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Download source code here &lt;a href=&#34;http://jsfiddle.net/gogmfazc/&#34; title=&#34;http://jsfiddle.net/gogmfazc/&#34;&gt;http://jsfiddle.net/gogmfazc/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to switch Homebrew formulas to older version</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/how-to-switch-homebrew-formulas-to-older-version/</link>
      <pubDate>Sat, 18 Oct 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/how-to-switch-homebrew-formulas-to-older-version/</guid>
      <description>

&lt;h1 id=&#34;how-to-switch-homebrew-formulas-to-older-version&#34;&gt;How to switch Homebrew formulas to older version&lt;/h1&gt;

&lt;p&gt;Sometimes you just won’t be able install latest version of any program and need
some older (e.g. PHP 5.6.1 won’t work and you need install at least 5.6.0 and
getting your work done). As you know all brew formulas are GIT repos, you
can swith to older version easly:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ cd /usr/local/Library/Taps/homebrew/homebrew-php/Formula
$ git log --pretty=&amp;quot;%h - %s&amp;quot; -10
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;71b2069 - Update to PHP 5.5.18
b8aeb54 - Use homebrew&#39;s openssl for IMAP
f0d721a - php56: improve phpdbg logic
0dc3f1c - Update to PHP 5.6.1
908fedd - Update to Blitz 0.8.12
4801697 - Updates formula for WP CLI  to version 0.17.0
00560f3 - Upgrade php*-swoole to 1.7.5
8cbd369 - Updated PHP_CodeSniffer
a81eba6 - update pecl_http to 2.1.2
6a88856 - Add HEAD url for composer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then just switch&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git checkout 908fedd
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And then run &lt;code&gt;brew install php56&lt;/code&gt; and older version PHP will be installed. Procedure can be used for any formulas.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hardcore Simple Events Dispatcher for PHP</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/hardcore-simple-events-dispatcher-for-php/</link>
      <pubDate>Sun, 05 Oct 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/hardcore-simple-events-dispatcher-for-php/</guid>
      <description>

&lt;h1 id=&#34;hardcore-simple-events-dispatcher-for-php&#34;&gt;Hardcore Simple Events Dispatcher for PHP&lt;/h1&gt;

&lt;p&gt;Events is simple pure functional &lt;strong&gt;event dispatching library&lt;/strong&gt; for PHP 5.5+ and
have nice and clear interface with function &lt;code&gt;on()&lt;/code&gt;, &lt;code&gt;one()&lt;/code&gt;, &lt;code&gt;off()&lt;/code&gt;, &lt;code&gt;trigger()&lt;/code&gt;,
&lt;code&gt;filter()&lt;/code&gt;, &lt;code&gt;ensure()&lt;/code&gt;, &lt;code&gt;listeners()&lt;/code&gt;, &lt;code&gt;events()&lt;/code&gt; - that&amp;rsquo;s all!&lt;/p&gt;

&lt;p&gt;With &lt;strong&gt;sphido/events&lt;/strong&gt; can:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;listeners prioritization&lt;/li&gt;
&lt;li&gt;add/remove listeners&lt;/li&gt;
&lt;li&gt;filter values by functions&lt;/li&gt;
&lt;li&gt;stop propagation in function chain&lt;/li&gt;
&lt;li&gt;and have event default handler&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;trigger-event&#34;&gt;Trigger event&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;on(&#39;event&#39;, function () {
  echo &amp;quot;wow it&#39;s works yeah!&amp;quot;;
});

trigger(&#39;event&#39;); // print wow it&#39;s works yeah!
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Hardcore simple events for PHP with filter, prioritizing, removing handlers and
stop propagation. It&amp;rsquo;s even simpler then my previous version &lt;a href=&#34;https://github.com/sphido/events&#34;&gt;https://github.com/sphido/events&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Getting GitHub latest release URL</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/getting-github-latest-release-url/</link>
      <pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/getting-github-latest-release-url/</guid>
      <description>

&lt;h1 id=&#34;getting-github-latest-release-url&#34;&gt;Getting GitHub latest release URL&lt;/h1&gt;

&lt;p&gt;Do you need &lt;strong&gt;Download Latest Version&lt;/strong&gt; button? Try follow PHP code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function getLatestTagUrl($repository, $default = &#39;master&#39;) {
    $file = @json_decode(@file_get_contents(&amp;quot;https://api.github.com/repos/$repository/tags&amp;quot;, false,
        stream_context_create([&#39;http&#39; =&amp;gt; [&#39;header&#39; =&amp;gt; &amp;quot;User-Agent: Vestibulum\r\n&amp;quot;]])
    ));
    return sprintf(&amp;quot;https://github.com/$repository/archive/%s.zip&amp;quot;, $file ? reset($file)-&amp;gt;name : $default);
}

echo getLatestTagUrl(&#39;OzzyCzech/vestibulum&#39;);
// will return https://github.com/OzzyCzech/vestibulum/archive/v0.2.1.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;#php #github #tip&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to fix “Shell Shock” bash bug on OS X</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/how-to-fix-shell-shock-bash-bug-on-os-x/</link>
      <pubDate>Thu, 25 Sep 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/how-to-fix-shell-shock-bash-bug-on-os-x/</guid>
      <description>

&lt;h1 id=&#34;how-to-fix-shell-shock-bash-bug-on-os-x&#34;&gt;How to fix “Shell Shock” bash bug on OS X&lt;/h1&gt;

&lt;p&gt;First try if your bash version it’s vulnerable. Go to terminal and run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ env x=&#39;() { :;}; echo vulnerable&#39; bash -c &#39;echo hello&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Follow output is an example of a non-vulnerable bash version.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bash: warning: x: ignoring function definition attempt
bash: error importing function definition for `x&#39;
hello
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you see the word &lt;strong&gt;vulnerable&lt;/strong&gt; in the output of that command your bash is &lt;strong&gt;vulnerable&lt;/strong&gt; and you &lt;strong&gt;should update&lt;/strong&gt;. ### How to update bash with Homebrew&lt;/p&gt;

&lt;p&gt;First check your bash version:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ bash --version    
GNU bash, version 4.3.18(1)-release (x86_64-apple-darwin13.3.0)
Copyright (C) 2013 Free Software Foundation, Inc.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then find your bash directory (full path can be usefull later):&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ ls -la /usr/local/bin/bash
/usr/local/bin/bash -&amp;gt; ../Cellar/bash/4.3.25/bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then upgrade bash:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew update
$ brew upgrade bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If your terminal starts returning weird error like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;dyld: Library not loaded: @@HOMEBREW_PREFIX@@/opt/readline/lib/libreadline.6.dylib
  Referenced from: /usr/local/bin/bash
  Reason: image not found
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You will need upgrade also readline with follow commands:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ brew rm -f readline
$ brew install readline
$ brew link readline --force
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Tip&lt;/strong&gt;: If you accidentally close &lt;strong&gt;Terminal&lt;/strong&gt; before getting above errors and your bash just stop working at all. Go to Terminal preferences&lt;code&gt;⌘+,&lt;/code&gt; and change bash version to older e.g.&lt;code&gt;/usr/local/Cellar/bash/4.3.18/bin/bash&lt;/code&gt; then quit Terminal &lt;code&gt;⌘+Q&lt;/code&gt;. Upgrade readline and change path back to &lt;code&gt;/usr/local/bin/bash&lt;/code&gt; and restart Terminal again.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AngularJS $http not sending X-Requested-With header</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/angularjs-http-not-sending-x-requested-with-header/</link>
      <pubDate>Wed, 24 Sep 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/angularjs-http-not-sending-x-requested-with-header/</guid>
      <description>

&lt;h1 id=&#34;angularjs-http-not-sending-x-requested-with-header&#34;&gt;AngularJS $http not sending X-Requested-With header&lt;/h1&gt;

&lt;p&gt;Angular &lt;a href=&#34;https://docs.angularjs.org/api/ng/service/$http&#34;&gt;$http&lt;/a&gt; isn’t appending the header &lt;code&gt;X-Requested-With&lt;/code&gt; = &lt;code&gt;XMLHttpRequest&lt;/code&gt; since Angular 1.3.0.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;X-Requested-With header is rarely used in practice and by using it all the time we are riggering preflight checks for crossdomain requests. See &lt;a href=&#34;https://github.com/angular/angular.js/commit/3a75b1124d062f64093a90b26630938558909e8d&#34;&gt; commit message&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That can cause some problems on PHP side. If you need somehow differentiate XHR and common requests. For example Zend Framework and lot of others PHP frameworks use follow code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function isXmlHttpRequest() {
 return !empty($_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;]) &amp;amp;&amp;amp;
  $_SERVER[&#39;HTTP_X_REQUESTED_WITH&#39;] === &#39;XMLHttpRequest&#39;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can easily add  on Angular side by following code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;myAppModule.config([&#39;$httpProvider&#39;, function($httpProvider) {
    $httpProvider.defaults.headers.common[&amp;quot;X-Requested-With&amp;quot;] = &#39;XMLHttpRequest&#39;;
}]);

&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to add all custom post type to main Wordpress archive.php</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/how-to-add-all-custom-post-type-to-main-wordpress-archive-php/</link>
      <pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/how-to-add-all-custom-post-type-to-main-wordpress-archive-php/</guid>
      <description>

&lt;h1 id=&#34;how-to-add-all-custom-post-type-to-main-wordpress-archive-php&#34;&gt;How to add all custom post type to main Wordpress archive.php&lt;/h1&gt;

&lt;p&gt;Default archive shows only &lt;code&gt;post&lt;/code&gt; type if you need show all post types just add follow code to &lt;code&gt;function.php&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;add_filter(
&#39;pre_get_posts&#39;, function ($query) {
        if (
            $query-&amp;gt;is_main_query() &amp;amp;&amp;amp;
            !is_admin() &amp;amp;&amp;amp;
            (is_category() || is_tag())
            &amp;amp;&amp;amp; empty($query-&amp;gt;query_vars[&#39;suppress_filters&#39;])
        ) {
            $posts = array_diff(
                get_post_types([&#39;public&#39; =&amp;gt; true]), [&#39;page&#39;, &#39;attachment&#39;, &#39;revision&#39;, &#39;forum&#39;, &#39;reply&#39;, &#39;topic&#39;] /* array of ignored types*/
            );
            $query-&amp;gt;set(
                &#39;post_type&#39;, $posts
            );
            return $query;
        }
    }
);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Simple pie chart progress bar in canvas element</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/simple-pie-chart-progress-bar-in-canvas-element/</link>
      <pubDate>Wed, 09 Jul 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/simple-pie-chart-progress-bar-in-canvas-element/</guid>
      <description>&lt;h1&gt;Simple pie chart progress bar in canvas element&lt;/h1&gt;

&lt;style type=&#34;text/css&#34;&gt;
div.chart {
    position:relative;
    margin:80px;
    width:220px; height:220px;
}
div.chart canvas {
    display: block;
    position:absolute;
    top:0;
    left:0;
}
div.chart span {
    color:#555;
    display:block;
    line-height:220px;
    text-align:center;
    width:220px;
    font-family:sans-serif;
    font-size:40px;
    font-weight:100;
    margin-left:5px;
}
&lt;/style&gt;

&lt;div class=&#34;text-center&#34; style=&#34;padding:30px&#34;&gt;
&lt;div class=&#34;chart&#34; id=&#34;graph&#34; data-percent=&#34;88&#34;&gt;&lt;/div&gt;
&lt;/div&gt;

&lt;script&gt;
var el = document.getElementById(&#39;graph&#39;); // get canvas

var options = {
 percent: el.getAttribute(&#39;data-percent&#39;) || 25,
 size: el.getAttribute(&#39;data-size&#39;) || 220,
 lineWidth: el.getAttribute(&#39;data-line&#39;) || 15,
 rotate: el.getAttribute(&#39;data-rotate&#39;) || 0
}

var canvas = document.createElement(&#39;canvas&#39;);
var span = document.createElement(&#39;span&#39;);
span.textContent = options.percent + &#39;%&#39;;

if (typeof(G_vmlCanvasManager) !== &#39;undefined&#39;) {
 G_vmlCanvasManager.initElement(canvas);
}

var ctx = canvas.getContext(&#39;2d&#39;);
canvas.width = canvas.height = options.size;

el.appendChild(span);
el.appendChild(canvas);

ctx.translate(options.size / 2, options.size / 2); // change center
ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg

//imd = ctx.getImageData(0, 0, 240, 240);
var radius = (options.size - options.lineWidth) / 2;

var drawCircle = function(color, lineWidth, percent) {
 percent = Math.min(Math.max(0, percent || 1), 1);
 ctx.beginPath();
 ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);
 ctx.strokeStyle = color;
 ctx.lineCap = &#39;round&#39;; // butt, round or square
 ctx.lineWidth = lineWidth
 ctx.stroke();
};

drawCircle(&#39;#efefef&#39;, options.lineWidth, 100 / 100);
drawCircle(&#39;#555555&#39;, options.lineWidth, options.percent / 100);
&lt;/script&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;//jsfiddle.net/zky35zt7/embedded/&#34; allowfullscreen=&#34;allowfullscreen&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;


&lt;p&gt;
  Basic code was taken from Simple PIE Chart
  &lt;a href=&#34;http://rendro.github.io/easy-pie-chart/&#34;&gt;http://rendro.github.io/easy-pie-chart/  &lt;/a&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to keep directory structure with gulp-zip</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/how-to-keep-directory-structure-with-gulp-zip/</link>
      <pubDate>Tue, 27 May 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/how-to-keep-directory-structure-with-gulp-zip/</guid>
      <description>

&lt;h1 id=&#34;how-to-keep-directory-structure-with-gulp-zip&#34;&gt;How to keep directory structure with gulp-zip&lt;/h1&gt;

&lt;p&gt;Here is a simple way, how to keep directory structure with &lt;a href=&#34;https://github.com/sindresorhus/gulp-zip&#34;&gt;gulp-zip&lt;/a&gt;. You just need add &lt;code&gt;{base: &amp;quot;.&amp;quot;}&lt;/code&gt; to src:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var gulp = require(&amp;quot;gulp&amp;quot;);
var zip = require(&amp;quot;gulp-zip&amp;quot;);
path = require(&#39;path&#39;);

gulp.task(&amp;quot;zip&amp;quot;, function () {
 return gulp.src([
   &#39;css/*&#39;,
   &#39;img/*&#39;,
   &#39;js/*&#39;,
   &#39;manifest.json&#39;,
   &#39;popup.html&#39;,
  ], {base: &amp;quot;.&amp;quot;})
  .pipe(zip(&#39;archive.zip&#39;))
  .pipe(gulp.dest(&#39;dist&#39;));
});

gulp.task(&amp;quot;default&amp;quot;, [&amp;quot;zip&amp;quot;]);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>How to protect your emails with PHP and Javascript</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/how-to-protect-your-emails-with-php-and-javascript/</link>
      <pubDate>Tue, 22 Apr 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/how-to-protect-your-emails-with-php-and-javascript/</guid>
      <description>

&lt;h1 id=&#34;how-to-protect-your-emails-with-php-and-javascript&#34;&gt;How to protect your emails with PHP and Javascript&lt;/h1&gt;

&lt;p&gt;Working with or without javascript it&amp;rsquo;s combine two technique for email protection &lt;a href=&#34;http://en.wikipedia.org/wiki/ROT13&#34;&gt;ROT13&lt;/a&gt; and CSS&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function mail($email, $text = null) {
 return &#39;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;document.write(&amp;quot;&#39; .
 addslashes(
  str_rot13(
   &#39;&amp;lt;a href=&amp;quot;mailto:&#39; . $email . &#39;&amp;quot; rel=&amp;quot;nofollow&amp;quot;&amp;gt;&#39; . ($text ? : $email) . &#39;&amp;lt;/a&amp;gt;&#39;
  )
 ) . &#39;&amp;quot;.replace(/[a-zA-Z]/g,function(c){return String.fromCharCode((c&amp;lt;=&amp;quot;Z&amp;quot;?90:122)&amp;gt;=(c=c.charCodeAt(0)+13)?c:c-26);}));&amp;lt;/script&amp;gt;&#39; .
 &#39;&amp;lt;noscript&amp;gt;&amp;lt;span style=&amp;quot;unicode-bidi: bidi-override; direction: rtl;&amp;quot;&amp;gt;&#39; . strrev($email) . &#39;&amp;lt;/span&amp;gt;&amp;lt;/noscript&amp;gt;&#39;;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sources: - &lt;a href=&#34;http://techblog.tilllate.com/2008/07/20/ten-methods-to-obfuscate-e-mail-addresses-compared/&#34;&gt; Nine ways to obfuscate e-mail addresses compared&lt;/a&gt;
- and &lt;a href=&#34;http://perishablepress.com/best-method-for-email-obfuscation/&#34;&gt;Best Method for Email Obfuscation?&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Prevent Heartbleed - upgrade openssl with brew on your mac</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/prevent-heartbleed-upgrade-openssl-with-brew-on-your-mac/</link>
      <pubDate>Mon, 14 Apr 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/prevent-heartbleed-upgrade-openssl-with-brew-on-your-mac/</guid>
      <description>

&lt;h1 id=&#34;prevent-heartbleed-upgrade-openssl-with-brew-on-your-mac&#34;&gt;Prevent Heartbleed: upgrade openssl with brew on your mac&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&#34;http://heartbleed.com/&#34;&gt;Heartbleed Bug&lt;/a&gt; is a serious vulnerability in the
popular OpenSSL cryptographic software library. Follow &lt;a href=&#34;http://brew.sh/&#34;&gt;brew&lt;/a&gt;
command will upgrade your openssl library:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;brew install openssl &amp;amp;&amp;amp; brew link openssl --force&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Relaunch your Terminal (has to be hard quit ⌘ + Q) and check your openssl version:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;openssl version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Now you shall have &lt;code&gt;OpenSSL 1.0.1g 7 Apr 2014&lt;/code&gt; or newer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to keep GitHub Fork Updated (no merge - the right way)</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/how-to-keep-github-fork-updated-no-merge-the-right-way/</link>
      <pubDate>Tue, 11 Feb 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/how-to-keep-github-fork-updated-no-merge-the-right-way/</guid>
      <description>

&lt;h1 id=&#34;how-to-keep-github-fork-updated-no-merge-the-right-way&#34;&gt;How to keep GitHub Fork Updated (no merge - the right way)&lt;/h1&gt;

&lt;p&gt;Here is solution how to keep your forks updated &lt;a href=&#34;https://help.github.com/articles/syncing-a-fork&#34;&gt;without merge&lt;/a&gt; and clean history&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone git@github.com:[username]/[repo].git
git remote add upstream git@github.com:[username2]/[repo].git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When something change in forked repo&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git fetch upstream
git checkout [branch]
git rebase upstream/[branch]
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Convert JSON data to valid PHP code</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/convert-json-data-to-valid-php-code/</link>
      <pubDate>Sun, 19 Jan 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/convert-json-data-to-valid-php-code/</guid>
      <description>

&lt;h1 id=&#34;convert-json-data-to-valid-php-code&#34;&gt;Convert JSON data to valid PHP code&lt;/h1&gt;

&lt;p&gt;Do you need &lt;strong&gt;convert JSON data to valid PHP&lt;/strong&gt; code without pain? I&amp;rsquo;ve got a short script for that! My simple solution used &lt;a href=&#34;http://www.php.net/manual/en/function.var-export.php&#34;&gt;var_export()&lt;/a&gt; function. This function generates almost valid, well formatted PHP code from usual JSON data. Invalidity of code can be fix with one regular expression, which replace &lt;code&gt;stdClass::__set_state/&lt;/code&gt; with &lt;code&gt;(object)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Take a closer look at example data. I have here &lt;a href=&#34;https://gist.github.com/Fluidbyte/2973986&#34;&gt;currency.json&lt;/a&gt; - PHP code should look something like this:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
 return array (
  &#39;USD&#39; =&amp;gt;
  (object)(array(
     &#39;symbol&#39; =&amp;gt; &#39;$&#39;,
     &#39;name&#39; =&amp;gt; &#39;US Dollar&#39;,
     &#39;symbol_native&#39; =&amp;gt; &#39;$&#39;,
     &#39;decimal_digits&#39; =&amp;gt; 2,
     &#39;rounding&#39; =&amp;gt; 0,
     &#39;code&#39; =&amp;gt; &#39;USD&#39;,
     &#39;name&#39; =&amp;gt; &#39;US dollars&#39;,
  )),
  &#39;CAD&#39; =&amp;gt;
  //...
);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s can be done in only four lines of PHP code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$data = json_decode(file_get_contents(__DIR__ . &#39;/currency.json&#39;));
$code = var_export((array)$data, true);
$code = &amp;quot;&amp;lt;?php\n return &amp;quot; . preg_replace(&#39;/stdClass::__set_state/&#39;, &#39;(object)&#39;, $code) . &#39;;&#39;;
file_put_contents(__DIR__ . &#39;/currencies.locale.php&#39;, $code);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you need call some function (like &lt;a href=&#34;http://www.php.net/manual/en/book.gettext.php&#34;&gt;gettext&lt;/a&gt;) above the variable, just add more regular expression:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$data = json_decode(file_get_contents(__DIR__ . &#39;/currency.json&#39;));
$code = var_export((array)$data, true);

// add gettext function call
$code = preg_replace(&amp;quot;/&#39;name&#39; =&amp;gt; &#39;(.+)&#39;/&amp;quot;, &amp;quot;&#39;name&#39; =&amp;gt; __(&#39;$1&#39;)&amp;quot;, $code);
$code = preg_replace(&amp;quot;/&#39;name_plural&#39; =&amp;gt; &#39;(.+)&#39;/&amp;quot;, &amp;quot;&#39;name&#39; =&amp;gt; __(&#39;$1&#39;)&amp;quot;, $code);

// save PHP code
$code = &amp;quot;&amp;lt;?php\n return &amp;quot; . preg_replace(&#39;/stdClass::__set_state/&#39;, &#39;(object)&#39;, $code) . &#39;;&#39;;
file_put_contents(__DIR__ . &#39;/currencies.locale.php&#39;, $code);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Find all unnecessary images without link from code</title>
      <link>https://ozzyczech.github.io/nabito.net/2014/find-all-unnecessary-images-without-link-from-code/</link>
      <pubDate>Fri, 17 Jan 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/2014/find-all-unnecessary-images-without-link-from-code/</guid>
      <description>

&lt;h1 id=&#34;find-all-unnecessary-images-without-link-from-code&#34;&gt;Find all unnecessary images without link from code&lt;/h1&gt;

&lt;p&gt;How to find all unnecessary images in your website project?&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;find public/images -type f|while read line ; do printf &amp;quot;$(basename $line) &amp;gt; &amp;quot; &amp;amp;&amp;amp; ack --nofilter -l -c &amp;quot;$(basename $line)&amp;quot; | wc -l; done
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Output will be:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sprite.gif &amp;gt; 0
ajax-loader-bg-f9.gif &amp;gt; 2
ajax-loader-bg-trans.gif &amp;gt; 3
ajax-loader-static-bg-trans.gif &amp;gt; 2
bg_about.png &amp;gt; 2
...
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If you want output filenames not just marches count remove&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;| wc -l
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>