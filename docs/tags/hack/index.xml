<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hack on nabito.net</title>
    <link>https://ozzyczech.github.io/nabito.net/tags/hack/</link>
    <description>Recent content in Hack on nabito.net</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cs-cz</language>
    <managingEditor>ozana@omdesign.cz (Roman O탑ana)</managingEditor>
    <webMaster>ozana@omdesign.cz (Roman O탑ana)</webMaster>
    <lastBuildDate>Thu, 24 Jul 2014 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://ozzyczech.github.io/nabito.net/tags/hack/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>How to add all custom post type to main Wordpress archive.php</title>
      <link>https://ozzyczech.github.io/nabito.net/how-to-add-all-custom-post-type-to-main-wordpress-archive.php/</link>
      <pubDate>Thu, 24 Jul 2014 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman O탑ana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/how-to-add-all-custom-post-type-to-main-wordpress-archive.php/</guid>
      <description>

&lt;h1 id=&#34;how-to-add-all-custom-post-type-to-main-wordpress-archive-php&#34;&gt;How to add all custom post type to main Wordpress archive.php&lt;/h1&gt;

&lt;p&gt;Default archive shows only &lt;code&gt;post&lt;/code&gt; type if you need show all post types just add follow code to &lt;code&gt;function.php&lt;/code&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;add_filter(
&#39;pre_get_posts&#39;, function ($query) {
        if (
            $query-&amp;gt;is_main_query() &amp;amp;&amp;amp;
            !is_admin() &amp;amp;&amp;amp;
            (is_category() || is_tag())
            &amp;amp;&amp;amp; empty($query-&amp;gt;query_vars[&#39;suppress_filters&#39;])
        ) {
            $posts = array_diff(
                get_post_types([&#39;public&#39; =&amp;gt; true]), [&#39;page&#39;, &#39;attachment&#39;, &#39;revision&#39;, &#39;forum&#39;, &#39;reply&#39;, &#39;topic&#39;] /* array of ignored types*/
            );
            $query-&amp;gt;set(
                &#39;post_type&#39;, $posts
            );
            return $query;
        }
    }
);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Make WordPress globals more accessible</title>
      <link>https://ozzyczech.github.io/nabito.net/wordpress/make-wordpress-globals-more-accessible/</link>
      <pubDate>Fri, 08 Feb 2013 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman O탑ana)</author>
      <guid>https://ozzyczech.github.io/nabito.net/wordpress/make-wordpress-globals-more-accessible/</guid>
      <description>

&lt;h1 id=&#34;make-wordpress-globals-more-accessible&#34;&gt;Make WordPress globals more accessible&lt;/h1&gt;

&lt;p&gt;Wordpress using a lot &lt;a href=&#34;http://codex.wordpress.org/Global_Variables&#34;&gt;globals variables&lt;/a&gt;. These variables are used throughout WordPress code for various reasons. Great example is database connection object &lt;a href=&#34;http://codex.wordpress.org/Class_Reference/wpdb&#34;&gt;wpdb&lt;/a&gt;. Here is common example how to use &lt;strong&gt;wpdb&lt;/strong&gt; in some function:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function something() {
  global $wpdb;
  /** @var wpdb $wpdb */
  $wpdb-&amp;gt;query(&#39;SQL...&#39;);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;It&amp;rsquo;s highly uncomfortable and long! Therefore, I have prepared a simple object which make all global variables much more accesible from anywhere: &lt;a href=&#34;https://gist.github.com/OzzyCzech/4737518&#34;&gt;https://gist.github.com/OzzyCzech/4737518&lt;/a&gt; (PHP 5.3+ only)&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;function something() {
  Globals::wpdb()-&amp;gt;query(&#39;SQL...&#39;);
}
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>