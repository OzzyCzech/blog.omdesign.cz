<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>blog.omdesign.cz</title>
    <link>http://blog.omdesign.cz/tags/hash/index.xml</link>
    <description>Recent content on blog.omdesign.cz</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>cs-cz</language>
    <managingEditor>ozana@omdesign.cz (Roman Ožana)</managingEditor>
    <webMaster>ozana@omdesign.cz (Roman Ožana)</webMaster>
    <atom:link href="http://blog.omdesign.cz/tags/hash/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Hash tags pro Wordpress</title>
      <link>http://blog.omdesign.cz/wordpress/hash-tags-pro-wordpress/</link>
      <pubDate>Sat, 15 Sep 2012 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>http://blog.omdesign.cz/wordpress/hash-tags-pro-wordpress/</guid>
      <description>

&lt;h1 id=&#34;hash-tags-pro-wordpress&#34;&gt;Hash tags pro Wordpress&lt;/h1&gt;

&lt;p&gt;Napsal jsem velmi jednoduchý plugin, který přidává do Wordpress podporu pro hash tagy:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?php
/*
Plugin Name: Hashs
Description: Twitter like hash for Wordpress
Version: 1.0
Author: Roman Ozana &amp;lt;ozana@omdesign.cz&amp;gt;
Author URI: http://www.omdesign.cz/
*/
class Hashs {

  const PATTERN = &#39;/\B#([^\s\W#]+)/i&#39;;

  /**
   * @param string $content
   * @return string mixed
   */
  public static function processContent($content) {
    return preg_replace(Hashs::PATTERN, &#39;&amp;lt;a href=&amp;quot;&#39; . get_home_url(null, &#39;/tag/$1&#39;) . &#39;&amp;quot; class=&amp;quot;tag&amp;quot;&amp;gt;#$1&amp;lt;/a&amp;gt; &#39;, $content);
  }

  /**
   * Auto hash tags
   *
   * @param $post_id
   * @return bool
   */
  public static function addAutoTags($post_id) {
    $post = get_post($post_id);
    preg_match_all(Hashs::PATTERN, $post-&amp;gt;post_content, $matches);
    if (!isset($matches[1])) return;
    wp_set_object_terms($post_id, $matches[1], &#39;post_tag&#39;, false); // replace
  }
}

add_filter(&#39;the_content&#39;, array(&#39;Hashs&#39;, &#39;processContent&#39;), 1);
add_action(&#39;save_post&#39;, array(&#39;Hashs&#39;, &#39;addAutoTags&#39;));
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Povšimněte si zejména řádku  &lt;code&gt;wp_set_object_terms($post_id, $matches[1], &#39;post_tag&#39;, false);&lt;/code&gt;
ten totiž ukládá nalezené tagy k postu. Pokud je poslední hodnota &lt;code&gt;true&lt;/code&gt;,
provede append (přidání ke stávajícím tagům). Pokud je &lt;code&gt;false&lt;/code&gt;, provede
nahrazení všech tagů u postu nalezenými hashtagy.&lt;/p&gt;

&lt;p&gt;Zdrojový kód ke stažení zde: &lt;a href=&#34;https://bitbucket.org/OzzyCzech/omhashtag&#34;&gt;https://bitbucket.org/OzzyCzech/omhashtag&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Výpočet hash objektu v PHP</title>
      <link>http://blog.omdesign.cz/v%C3%BDpo%C4%8Det-hash-objektu-v-php/</link>
      <pubDate>Sun, 25 Sep 2011 00:00:00 +0000</pubDate>
      <author>ozana@omdesign.cz (Roman Ožana)</author>
      <guid>http://blog.omdesign.cz/v%C3%BDpo%C4%8Det-hash-objektu-v-php/</guid>
      <description>

&lt;h1 id=&#34;výpočet-hash-objektu-v-php&#34;&gt;Výpočet hash objektu v PHP&lt;/h1&gt;

&lt;p&gt;Funkce &lt;a href=&#34;http://php.net/manual/en/function.spl-object-hash.php&#34;&gt;spl_object_hash()&lt;/a&gt;
má jednu &lt;strong&gt;nevýhodu&lt;/strong&gt;, její výsledek se v čase mění. Pokud objekt naplníte
stejnými hodnotami, dostanete při dvou requestech dva různé výsledky. Což nemusí
být vždy žádoucí. Někdy potřebujete objekt identifikovat na základě jeho
vnitřních hodnot pomocí neměnného řetězce. Takový hash můžete snadno získat
například takto:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;class Foo {
 private $p;
 public function setProperty($p) {
  $this-&amp;gt;p = $p;
 }
 // vypocita hash objektu na zaklade hodnot jeho propert
 public function __toString() {
  return md5(http_build_query(get_object_vars($this)));
 }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Pro vypsání/získání hash pak stačí:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$bar = new Foo();
$bar-&amp;gt;setProperty(&#39;25&#39;);
echo $bar;
$hash = (string) $bar;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>